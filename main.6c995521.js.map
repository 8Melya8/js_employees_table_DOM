{"version":3,"sources":["scripts/main.js"],"names":["indexMemory","body","document","querySelector","tableHead","tableBody","toNumber","item","slice","replace","count","addEventListener","e","index","target","cellIndex","sorted","rows","sort","a","b","aText","cells","innerText","bText","localeCompare","reverse","append","rowBefore","row","closest","classList","add","remove","insertAdjacentHTML","buttonAdd","getNotification","title","description","type","notification","createElement","dataset","qa","style","position","textAlign","padding","top","right","backgroundColor","borderRadius","setTimeout","nameEmployee","office","age","salary","preventDefault","value","length","toLocaleString","reset","cell","defaultCell","input","width","getComputedStyle","firstChild","removeChild","focus","enter","key","blur"],"mappings":"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","file":"main.6c995521.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\n\n// Task 1. Implement table sorting by clicking on the title.\n\nconst toNumber = item => +item.slice(1).replace(',', '');\nlet count = 0;\nlet indexMemory;\n\ntableHead.addEventListener('click', e => {\n  const index = e.target.cellIndex;\n\n  if (indexMemory !== index) {\n    count = 0;\n  }\n\n  let sorted = [...tableBody.rows].sort((a, b) => {\n    const aText = a.cells[index].innerText;\n    const bText = b.cells[index].innerText;\n\n    switch (index) {\n      case 0:\n      case 1:\n      case 2:\n        return aText.localeCompare(bText);\n      case 3:\n        return +aText - +bText;\n      case 4:\n        return toNumber(aText) - toNumber(bText);\n    }\n  });\n\n  if (count % 2 !== 0) {\n    sorted = sorted.reverse();\n  }\n\n  tableBody.append(...sorted);\n  count++;\n  indexMemory = index;\n});\n\n// Task 1. Finished.\n\n// Task 2. Row select.\n\nlet rowBefore = tableBody.rows[0];\n\ntableBody.addEventListener('click', e => {\n  const row = e.target.closest('tr');\n\n  row.classList.add('active');\n\n  if (row !== rowBefore) {\n    rowBefore.classList.remove('active');\n  }\n\n  rowBefore = row;\n});\n\n// Task 2. Finished.\n\n// Task 3. Add a form.\n\nbody.insertAdjacentHTML('beforeend', `\n  <form class='new-employee-form'>\n    <label>\n      Name:\n      <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n    </label>\n    <label>\n      Position:\n      <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n    </label>\n    <label>\n      Office:\n      <select name=\"office\" data-qa=\"office\" required>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>\n      Age:\n      <input name=\"age\" type=\"number\" data-qa=\"age\" required>\n    </label>\n    <label>\n      Salary:\n      <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n    </label>\n\n    <button>Save to table</button>\n  </form>\n`);\n\n// Task 3. Finished.\n\n// Task 4. Show notification.\n\nconst buttonAdd = document.querySelector('button');\n\nbuttonAdd.addEventListener('click', e => {\n  const nameEmployee = document.querySelector('[data-qa=\"name\"]');\n  const position = document.querySelector('[data-qa=\"position\"]');\n  const office = document.querySelector('[data-qa=\"office\"]');\n  const age = document.querySelector('[data-qa=\"age\"]');\n  const salary = document.querySelector('[data-qa=\"salary\"]');\n\n  e.preventDefault();\n\n  if (nameEmployee.value.length < 4) {\n    getNotification(\n      `Invalid name!`,\n      `Name is to short, enter the correct one.`,\n      'error'\n    );\n\n    return;\n  };\n\n  if (position.value.length < 4) {\n    getNotification(\n      `Invalid position!`,\n      `Position is to short, enter the correct one.`,\n      'error'\n    );\n\n    return;\n  };\n\n  if (age.value < 18 || age.value > 90) {\n    getNotification(\n      `Invalid age!`,\n      `Enter the correct age.`,\n      'error'\n    );\n\n    return;\n  }\n\n  if (salary.value < 1) {\n    getNotification(\n      `Invalid salary!`,\n      `Enter the correct salary.`,\n      'error'\n    );\n\n    return;\n  }\n\n  tableBody.insertAdjacentHTML('beforeend', `\n    <tr class=\"new_employee\">\n      <td>${nameEmployee.value}</td>\n      <td>${position.value}</td>\n      <td>${office.value}</td>\n      <td>${age.value}</td>\n      <td>$${salary.value.toLocaleString('en-US')}</td>\n    </tr>\n  `);\n\n  getNotification(\n    `Completed!`,\n    `The employee has been added to the table!`,\n    'success'\n  );\n\n  document.querySelector('.new-employee-form').reset();\n});\n\nfunction getNotification(title, description, type) {\n  const notification = document.createElement('div');\n\n  notification.classList.add(`${type}`);\n  notification.dataset.qa = 'notification';\n  notification.style.position = 'absolute';\n  notification.style.textAlign = 'center';\n  notification.style.padding = '0 10px';\n  notification.style.top = '10px';\n  notification.style.right = '10px';\n  notification.style.backgroundColor = 'purple';\n  notification.style.borderRadius = '5px';\n\n  notification.insertAdjacentHTML('beforeend', `\n    <h2 class=\"title\">\n      ${title}\n    </h2>\n    <p>\n    ${description}\n    </p>\n  `);\n\n  body.append(notification);\n\n  setTimeout(\n    () => notification.remove(),\n    3000);\n}\n\n// Task 4. Finished.\n\n// Task 5. Editing of table cells by double-clicking on it.\\\n\ntableBody.addEventListener('dblclick', e => {\n  const cell = e.target.closest('td');\n\n  const defaultCell = cell.innerText;\n  let input = document.createElement('input');\n\n  input.classList.add('cell-input');\n  input.style.width = getComputedStyle(cell).width;\n\n  switch (cell.cellIndex) {\n    case 0:\n    case 1:\n      input.type = 'text';\n\n      break;\n    case 2:\n      input = document.createElement('select');\n\n      input.insertAdjacentHTML('afterbegin', `\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n      `);\n\n      break;\n    case 3:\n    case 4:\n      input.type = 'number';\n  }\n\n  if (cell.firstChild) {\n    cell.removeChild(cell.firstChild);\n  }\n\n  cell.append(input);\n  input.focus();\n\n  input.addEventListener('blur', () => {\n    switch (cell.cellIndex) {\n      case 0:\n        if (input.value.length < 4) {\n          getNotification(\n            `Invalid name!`,\n            `Name is to short, enter the correct one.`,\n            'error'\n          );\n          input.value = defaultCell;\n        }\n        break;\n      case 1:\n        if (input.value.length < 3) {\n          getNotification(\n            `Invalid position!`,\n            `Position is to short, enter the correct one.`,\n            'error'\n          );\n          input.value = defaultCell;\n        }\n        break;\n\n      case 2:\n        break;\n\n      case 3:\n        if (input.value < 18 || input.value > 90) {\n          getNotification(\n            `Invalid age!`,\n            `Enter the correct age.`,\n            'error'\n          );\n          input.value = defaultCell;\n        }\n        break;\n\n      case 4:\n        if (input.value < 1) {\n          getNotification(\n            `Invalid salary!`,\n            `Enter the correct salary.`,\n            'error'\n          );\n          cell.innerText = defaultCell;\n        } else {\n          cell.innerText = `$${input.value.toLocaleString('en-US')}`;\n        }\n        break;\n\n      default:\n        getNotification(\n          `Unknown error!`,\n          `Please check the correctness of the entered data.`,\n          'error'\n        );\n    }\n\n    cell.innerText = input.value;\n    cell.removeChild(input);\n  });\n\n  input.addEventListener('keydown', enter => {\n    if (enter.key === 'Enter') {\n      input.blur();\n    }\n  });\n});\n\n// Task 5. Finished.\n"]}